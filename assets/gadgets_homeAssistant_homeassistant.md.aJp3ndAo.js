import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.ko2zIC2c.js";const h="/assets/ha-create-account.B-8NF20I.jpg",p="/assets/home-assistant-restart.Nzm2-WGf.jpg",e="/assets/install-hacs.C7t1Ea6j.jpg",l="/assets/hacs-github-link.DJVw5wP5.jpg",k="/assets/xiaomi-miotauto.CvUo5FN5.jpg",C=JSON.parse('{"title":"Home Assistant","description":"","frontmatter":{},"headers":[],"relativePath":"gadgets/homeAssistant/homeassistant.md","filePath":"gadgets/homeAssistant/homeassistant.md","lastUpdated":1744514991000}'),d={name:"gadgets/homeAssistant/homeassistant.md"};function r(o,s,F,g,c,y){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="home-assistant" tabindex="-1">Home Assistant <a class="header-anchor" href="#home-assistant" aria-label="Permalink to &quot;Home Assistant&quot;">​</a></h1><p><a href="https://www.home-assistant.io/" target="_blank" rel="noreferrer">Home Assistant</a> 是一款基于 Python 的智能家居开源系统，支持多品牌的智能家居设备，用于实现设备的语音控制、自动化等。</p><p>动机：苹果的家居好是好，但是又贵又少；小米的东西便宜，但是不能直接加到苹果家庭内</p><p>解决：将 Home Assistant 安装到树莓派上，作为中枢控制</p><p>支持列表：<a href="https://www.jianguoyun.com/p/DbzdYzoQp5HMBhjZ4IkB" target="_blank" rel="noreferrer">https://www.jianguoyun.com/p/DbzdYzoQp5HMBhjZ4IkB</a></p><h2 id="home-assistant-an-zhuang" tabindex="-1">Home Assistant 安装 <a class="header-anchor" href="#home-assistant-an-zhuang" aria-label="Permalink to &quot;Home Assistant 安装&quot;">​</a></h2><p>各种安装方式的区别可以参考 <a href="https://www.home-assistant.io/installation/#advanced-installation-methods" target="_blank" rel="noreferrer">Advanced installation methods</a></p><h3 id="docker-de-an-zhuang-fang-shi" tabindex="-1">Docker 的安装方式 <a class="header-anchor" href="#docker-de-an-zhuang-fang-shi" aria-label="Permalink to &quot;Docker 的安装方式&quot;">​</a></h3><p>参考 <a href="https://www.home-assistant.io/installation/alternative" target="_blank" rel="noreferrer">Install Home Assistant Container</a> ，采用 docker 的方式在树莓派上安装 Home Assistant</p><p>终端运行以安装 <a href="https://docs.docker.com/engine/install/debian/#install-using-the-repository" target="_blank" rel="noreferrer">docker</a></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Add Docker&#39;s official GPG key:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ca-certificates</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0755</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apt/keyrings</span></span></code></pre></div><p>获取 docker 源</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-Lvlg-" id="tab-ZBmiINM" checked><label data-title="腾讯云" for="tab-ZBmiINM">腾讯云</label><input type="radio" name="group-Lvlg-" id="tab-UL-Pv0D"><label data-title="官方" for="tab-UL-Pv0D">官方</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># https://cloud.tencent.com/document/product/213/46000#.E5.AE.89.E8.A3.85-docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://mirrors.cloud.tencent.com/docker-ce/linux/ubuntu/gpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apt/keyrings/docker.asc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a+r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apt/keyrings/docker.asc</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   &quot;deb [arch=$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --print-architecture</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">) signed-by=/etc/apt/keyrings/docker.asc] https://mirrors.cloud.tencent.com/docker-ce/linux/ubuntu/ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/os-release &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$VERSION_CODENAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;) stable&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tee</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apt/sources.list.d/docker.list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/null</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://download.docker.com/linux/debian/gpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apt/keyrings/docker.asc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a+r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apt/keyrings/docker.asc</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Add the repository to Apt sources:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;deb [arch=$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --print-architecture</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/os-release &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$VERSION_CODENAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;) stable&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tee</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apt/sources.list.d/docker.list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/null</span></span></code></pre></div></div></div><p>更新 apt 包索引</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span></code></pre></div><p>安装 Docker CE 和 containerd：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-ce-cli</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> containerd.io</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-buildx-plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose-plugin</span></span></code></pre></div><p>验证 Docker 是否安装成功</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 执行以下命令，运行 Docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> info</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">               # 检查安装结果</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 运行 Docker 守护进程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 停止 Docker 守护进程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 重启 Docker 守护进程</span></span></code></pre></div><p>创建 <code>compose.yml</code> 文件，然后运行 <code>docker-compose up -d</code> 启动 Home Assistant</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-dduIN" id="tab-LPmwpi6" checked><label data-title="compose.yml" for="tab-LPmwpi6">compose.yml</label><input type="radio" name="group-dduIN" id="tab-ot4kruH"><label data-title="compose.yml 示例" for="tab-ot4kruH">compose.yml 示例</label></div><div class="blocks"><div class="language-yml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  homeassistant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">homeassistant</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ghcr.io/home-assistant/home-assistant:stable&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/PATH_TO_YOUR_CONFIG:/config</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/localtime:/etc/localtime:ro</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/run/dbus:/run/dbus:ro</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    privileged</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    network_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">host</span></span></code></pre></div><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  homeassistant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">homeassistant</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ghcr.io/home-assistant/home-assistant:stable&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/home/ubuntu/homeassistant/config:/config</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 将宿主机上的配置目录挂载到容器内的 /config 目录。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/home/ubuntu/homeassistant/media:/media</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 将宿主机上的配置目录挂载到容器内的 /config 目录。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/localtime:/etc/localtime:ro</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 将宿主机的时间区域文件挂载到容器内，只读模式。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/run/dbus:/run/dbus:ro</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 将 DBus socket 挂载到容器内，以便Home Assistant 可以与系统服务交互，只读模式。</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 重启策略</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    privileged</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 给容器特权模式，以便它可以访问一些普通容器无法访问的系统资源。</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    network_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">host</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 使用宿主机的网络栈，使得容器可以直接使用宿主机的 IP 地址进行网络通信。</span></span></code></pre></div></div></div><p>启动 Home Assistant</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> homeassistant</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 重启 Home Assistant</span></span></code></pre></div><p>如果修改了上述的 <code>compose.yml</code> 文件，需要重新启动 Home Assistant</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> down</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-create</span></span></code></pre></div><p>其中 <code>PATH_TO_YOUR_CONFIG</code> 为配置文件的路径，可以是 <code>/home/ubuntu/homeassistant/config</code>，那么需要修改 <code>&lt;...&gt;/config/configuration.yaml</code> 文件的时候，可以直接在宿主机上修改 <code>/home/ubuntu/homeassistant/config/configuration.yaml</code> 文件</p><p>进入容器</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> homeassistant</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span></span></code></pre></div><h2 id="home-assistant-1" tabindex="-1">Home Assistant <a class="header-anchor" href="#home-assistant-1" aria-label="Permalink to &quot;Home Assistant&quot;">​</a></h2><p>输入 <code>http://&lt;ip&gt;:8123</code> 进入 Home Assistant 界面进行配置，配置密码和家庭地址后，即可进入 Home Assistant 界面</p><blockquote><p><code>&lt;ip&gt;</code> 为树莓派的 IP 地址</p></blockquote><p><img src="`+h+'" alt=""></p><h2 id="hacs" tabindex="-1">HACS <a class="header-anchor" href="#hacs" aria-label="Permalink to &quot;HACS&quot;">​</a></h2><p><a href="https://github.com/hacs/integration/releases" target="_blank" rel="noreferrer">hacs/integration</a></p><p>参考 <a href="https://hacs.xyz/docs/setup/download" target="_blank" rel="noreferrer">Download</a> 安装</p><p>进入容器</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> homeassistant</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span></span></code></pre></div><p>执行脚本后重启 Home Assistant 容器</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -O</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://get.hacs.xyz</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span></span></code></pre></div><p>重启 Home Assistant 容器</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> homeassistant</span></span></code></pre></div><p>点击用左下角用户名，在「用户设置」中启用「高级模式」，然后在「配置」菜单中选择「系统」，右上角重启</p><p><img src="'+p+'" alt="重启"></p><p>安装 HACS <img src="'+e+'" alt="install-hacs"></p><p>需要在 GitHub 上授权登录 <img src="'+l+'" alt="hacs-github-link"></p><h2 id="mi-jia-ji-cheng" tabindex="-1">米家集成 <a class="header-anchor" href="#mi-jia-ji-cheng" aria-label="Permalink to &quot;米家集成&quot;">​</a></h2><p>米家继承基于 <a href="https://my.home-assistant.io/redirect/hacs_repository/?owner=al-one&amp;repository=hass-xiaomi-miot" target="_blank" rel="noreferrer">Xiaomi Miot Auto</a>，文档参考 <a href="https://github.com/al-one/hass-xiaomi-miot/blob/master/README_zh.md" target="_blank" rel="noreferrer">Xiaomi Miot For HomeAssistant</a></p><p>在左侧 HACS 中搜索「 <strong>Xiaomi Miot Auto</strong> 」，安装后，重启 Home Assistant</p><p><img src="'+k+`" alt=""></p><p>打开 <a href="https://my.home-assistant.io/redirect/config_flow_start?domain=xiaomi_miot" target="_blank" rel="noreferrer">添加集成</a> 修改 IP ，自动打开设置</p><ul><li><a href="https://github.com/al-one/hass-xiaomi-miot/issues/100#issuecomment-855183156" target="_blank" rel="noreferrer">❓️ 账号集成还是token集成？</a></li></ul><h2 id="qia-pian" tabindex="-1">卡片 <a class="header-anchor" href="#qia-pian" aria-label="Permalink to &quot;卡片&quot;">​</a></h2><h3 id="tian" tabindex="-1">天 <a class="header-anchor" href="#tian" aria-label="Permalink to &quot;天&quot;">​</a></h3><p>除了上面这些默认卡片，还可以手动添加一些卡片，比如用 iframe 添加一个天气组件。</p><p>打开网站 <a href="https://embed.windy.com/config/map" target="_blank" rel="noreferrer">Windy Embed</a>，选择地区调整到合适比例，复制代码。</p><p>添加“网页卡片”，在 URL 中只需要粘贴代码中的 src 部分，可以调整长宽比例。</p><p><a href="https://map.qweather.com/index.html?lat=3.21&amp;lon=119.05&amp;level=2&amp;layer=radar&amp;motion=on" target="_blank" rel="noreferrer">https://map.qweather.com/index.html?lat=3.21&amp;lon=119.05&amp;level=2&amp;layer=radar&amp;motion=on</a></p><h2 id="ha-bei-fen" tabindex="-1">HA 备份 <a class="header-anchor" href="#ha-bei-fen" aria-label="Permalink to &quot;HA 备份&quot;">​</a></h2><p>为了实现这个需求，我们需要在脚本中增加一个清理旧备份的功能，确保任何时候只有最近七天的备份存在。以下是一个修改后的脚本示例，它会在每天执行一次备份，并限制备份数量不超过一周（7个）。</p><p>创建一个名为 <code>backup_script.sh</code> 的新脚本文件，并使用以下内容：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置源目录和目标目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SOURCE_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/path/to/source_directory&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BACKUP_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/path/to/backup_directory&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -- 设置临时目录，并拷贝源目录内容至临时目录，解除 root 权限</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tmp_source_dir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$BACKUP_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">basename</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $SOURCE_DIR)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date_format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +%Y%m%d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">backup_file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tmp_source_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}_\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date_format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}.tar.gz&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果不存在备份目录，则创建</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$tmp_source_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$tmp_source_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 复制源目录内容至临时目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Rp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SOURCE_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$tmp_source_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chown</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ubuntu:ubuntu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $tmp_source_dir</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 755</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $tmp_source_dir</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用tar命令进行压缩</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$tmp_source_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -czf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$backup_file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查是否备份成功</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$?</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -eq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Backup completed successfully.&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 清理超过一周的备份</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    find</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$BACKUP_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -maxdepth</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;homeassitant_*.tar.gz&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -mtime</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +7</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Old backups removed if any.&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Backup failed.&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除临时目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$tmp_source_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><ol><li><strong>压缩备份</strong>：使用 <code>tar</code> 命令将源目录压缩成一个 <code>.tar.gz</code> 文件，文件名包含当前日期。</li><li><strong>清理旧备份</strong>：使用 <code>find</code> 命令查找所有超过7天的备份文件，并删除它们。<code>-mtime +7</code> 参数表示查找修改时间超过7天的文件。</li></ol><p>设置脚本具有执行权限：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> backup_script.sh</span></span></code></pre></div><p>使用 <code>crontab</code> 来安排定时任务。每天凌晨1点执行脚本：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">crontab</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span></span></code></pre></div><p>在打开的编辑器中添加如下行：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/your/script/backup_script.sh</span></span></code></pre></div><ul><li>确认 <code>SOURCE_DIR</code> 和 <code>BACKUP_DIR</code> 替换为你自己的路径。</li><li>确保 <code>BACKUP_DIR</code> 目录有写权限，脚本能够创建和删除文件。</li><li>测试脚本以确认一切正常工作。</li></ul><p>现在，每当脚本运行时，它都会创建当天的备份，并自动清理掉一周之前的备份文件，确保备份目录不会无限膨胀。</p><h2 id="sd-qia-bei-fen" tabindex="-1">SD 卡备份 <a class="header-anchor" href="#sd-qia-bei-fen" aria-label="Permalink to &quot;SD 卡备份&quot;">​</a></h2><h3 id="mac-shang-bei-fen-he-hui-fu-raspberry-pi-sd-qia" tabindex="-1">Mac 上备份和恢复 Raspberry Pi SD 卡 <a class="header-anchor" href="#mac-shang-bei-fen-he-hui-fu-raspberry-pi-sd-qia" aria-label="Permalink to &quot;Mac 上备份和恢复 Raspberry Pi SD 卡&quot;">​</a></h3><ul><li><strong>Mac 上「备份」 Raspberry Pi SD 卡</strong></li></ul><p>使用 <code>diskutil list</code> 命令来找到SD卡</p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">diskutil</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span></code></pre></div><p>找到SD卡后，你会看到类似这样的输出：</p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/dev/disk6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (external, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">physical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   #:                       TYPE NAME                    SIZE       IDENTIFIER</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   0:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     FDisk_partition_scheme</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                        *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">64.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    disk6</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   1:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             Windows_FAT_32</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> system-boot</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">             536.9</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   disk6s1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   2:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                      Linux</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                         63.6</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    disk6s2</span></span></code></pre></div><p>设置 SD 卡的路径变量 和 备份文件路径</p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SD_CARD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/dev/disk6&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BACKUP_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;~/raspberry-pi-backup-$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +%Y%m%d).img&quot;</span></span></code></pre></div><p>执行备份命令</p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> if=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${SD_CARD} </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">of=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${BACKUP_FILE} </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">status=progress</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># sudo dd if=\${SD_CARD} | gzip &gt; \${BACKUP_FILE}.gz # 管道 压缩</span></span></code></pre></div><ul><li><strong>Mac 上「恢复」 Raspberry Pi SD 卡</strong></li></ul><p>现在需要将 Raspberry Pi恢复到系统中，需要使用 <code>diskutil list</code> 命令来找到SD卡</p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">diskutil</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span></code></pre></div><p>设置 SD 卡的路径变量 和 备份文件路径</p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SD_CARD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/dev/disk6&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BACKUP_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;~/raspberry-pi-backup-$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +%Y%m%d).img&quot;</span></span></code></pre></div><p>现在，向SD卡写入之前，需要先卸载它。这样做的原因是OSX会同时尝试向它写入，卸载SD卡可以防止这种情况发生。在Mac设备上运行以下命令来卸载存储卡</p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">diskutil</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unmountDisk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${SD_CARD}</span></span></code></pre></div><p>现在可以把镜像写回SD卡，这也是一个漫长的过程</p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> if=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${BACKUP_FILE} </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">of=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${SD_CARD} </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">status=progress</span></span></code></pre></div><p>dd工具并不显示任何写入进度，所以请耐心等待回车命令提示重新出现</p><p>写入过程完成后，现在可以从Mac上弹出SD卡，这样就可以使用Raspberry Pi备份了。要弹出SD卡，可以利用以下命令。</p><p>Raspberry Pi的SD卡现在应该与进行原始备份时的状态相同。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo diskutil eject /dev/rdisk3</span></span></code></pre></div>`,94)]))}const u=i(d,[["render",r]]);export{C as __pageData,u as default};
