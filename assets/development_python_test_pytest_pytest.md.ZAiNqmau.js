import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.ko2zIC2c.js";const y=JSON.parse('{"title":"Pytest","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"development/python/test/pytest/pytest.md","filePath":"development/python/test/pytest/pytest.md","lastUpdated":1745681479000}'),h={name:"development/python/test/pytest/pytest.md"};function l(p,s,k,e,F,r){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="pytest" tabindex="-1">Pytest <a class="header-anchor" href="#pytest" aria-label="Permalink to &quot;Pytest&quot;">​</a></h1><p><a href="https://docs.pytest.org/" target="_blank" rel="noreferrer">pytest</a></p><p><a href="https://docs.pytest.org/en/latest/getting-started.html#getstarted" target="_blank" rel="noreferrer">文档</a></p><h2 id="pytest-1" tabindex="-1">pytest <a class="header-anchor" href="#pytest-1" aria-label="Permalink to &quot;pytest&quot;">​</a></h2><p>安装</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -U</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pytest</span></span></code></pre></div><h2 id="ce-shi-wen-jian" tabindex="-1">测试文件 <a class="header-anchor" href="#ce-shi-wen-jian" aria-label="Permalink to &quot;测试文件&quot;">​</a></h2><h3 id="dan-wen-jian-ce-shi" tabindex="-1">单文件测试 <a class="header-anchor" href="#dan-wen-jian-ce-shi" aria-label="Permalink to &quot;单文件测试&quot;">​</a></h3><p>创建 <code>test_sample.py</code> 文件，测试函数以 <code>test_</code> 开头，pytest会自动找到全部测试函数，并且</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># content of test_sample.py</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> inc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test_answer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> inc(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span></span></code></pre></div><p>运行 <code>python3 test_sample.py</code></p><details class="details custom-block"><summary>点击查看测试结果</summary><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_sample.py</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=============================</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> session</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> starts</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ==============================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">platform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> darwin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3.8.12,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pytest-7.0.1,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pluggy-1.0.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rootdir:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/hipy/project</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collected</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> item</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test_sample.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> F</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                                         [100%]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">===================================</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FAILURES</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ===================================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_________________________________</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_answer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> __________________________________</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    def</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_answer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       assert inc(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) == 5</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">E</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       assert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">E</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        +</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  where</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test_sample.py:7:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AssertionError</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">===========================</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> short</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> summary</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ============================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FAILED</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_sample.py::test_answer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> assert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">==============================</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> failed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0.01s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ===============================</span></span></code></pre></div></details><p>会给出测试的详情，</p><h3 id="duo-wen-jian-ce-shi" tabindex="-1">多文件测试 <a class="header-anchor" href="#duo-wen-jian-ce-shi" aria-label="Permalink to &quot;多文件测试&quot;">​</a></h3><p><code>pytest</code> 会测试当前目录及子目录下全部 <code>test_*.py</code> 和 <code>*_test.py</code> 文件，遵循<a href="https://docs.pytest.org/en/latest/explanation/goodpractices.html#test-discovery" target="_blank" rel="noreferrer">约定的测试目录规则</a></p><h2 id="ce-shi" tabindex="-1">测试 <a class="header-anchor" href="#ce-shi" aria-label="Permalink to &quot;测试&quot;">​</a></h2><h3 id="zai-yi-ge-lei-nei-dui-duo-ge-ce-shi-jin-xing-fen-zu" tabindex="-1">在一个类内对多个测试进行分组 <a class="header-anchor" href="#zai-yi-ge-lei-nei-dui-duo-ge-ce-shi-jin-xing-fen-zu" aria-label="Permalink to &quot;在一个类内对多个测试进行分组&quot;">​</a></h3><p><code>pytest</code> 会测试 <code>.py</code> 文件中以 <code>Test*</code> 开头的类，并且测试类中以 <code>test_</code> 开头的函数</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># content of test_class.py</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TestClass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test_one</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;this&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        assert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;h&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test_two</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hello&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        assert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hasattr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;check&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><details class="details custom-block"><summary>点击查看测试结果</summary><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=============================</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> session</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> starts</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ==============================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">platform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> darwin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3.8.12,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pytest-7.0.1,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pluggy-1.0.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rootdir:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /Users/henryzhu/project/Hello-Python/src/3rdparty/_pytest</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collected</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> items</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test_class.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .F</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                                         [100%]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">===================================</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FAILURES</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ===================================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">______________________________</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TestClass.test_two</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ______________________________</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">self</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">test_class.TestClass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> object</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0x10160688</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">0&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    def</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_two</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hello&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       assert hasattr(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">x,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;check&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">E</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       AssertionError:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> assert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> False</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">E</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        +</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  where</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> False</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hasattr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;hello&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;check&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test_class.py:9:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AssertionError</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">===========================</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> short</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> summary</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ============================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FAILED</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_class.py::TestClass::test_two</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AssertionError:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> assert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> False</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=========================</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> failed,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> passed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0.01s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ==========================</span></span></code></pre></div></details><p><code>test_one</code> 通过了测试，而 <code>test_two</code> 没有通过测试并且给出了报错信息</p><p>在类中对测试进行分组的时候，需要注意一个特殊的情况，每一个测试都有唯一的类实例，这是为了使得测试之间是隔离的，例如</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># content of test_class_demo.py</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TestClassDemoInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test_one</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        assert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test_two</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        assert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span></code></pre></div><p>这时候会发现 test_two 测试报错</p><details class="details custom-block"><summary>点击查看测试结果</summary><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=============================</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> session</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> starts</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ==============================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">platform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> darwin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3.8.12,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pytest-7.0.1,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pluggy-1.0.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rootdir:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /Users/henryzhu/project/Hello-Python/src/3rdparty/_pytest</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collected</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> items</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test_class_demo.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .F</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                                    [100%]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">===================================</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FAILURES</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ===================================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">________________________</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TestClassDemoInstance.test_two</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ________________________</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">self</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">test_class_demo.TestClassDemoInstance</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> object</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0x1017fa85</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">0&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    def</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_two</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       assert self.value == 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">E</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       assert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">E</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        +</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  where</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">test_class_demo.TestClassDemoInstance</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> object</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0x1017fa85</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">0&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.value</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test_class_demo.py:11:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AssertionError</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">===========================</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> short</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> summary</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ============================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FAILED</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_class_demo.py::TestClassDemoInstance::test_two</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> assert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=========================</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> failed,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> passed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0.01s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ==========================</span></span></code></pre></div></details><p>在 pytest 中，类内的分组测试是相互隔离的，而在类级别添加的属性是类属性，在测试之间是共享的。可以理解为如下情况</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># test one</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test_one_instance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TestClassDemoInstance()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test_one_instance.test_one()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># test two</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test_two_instance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TestClassDemoInstance()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test_two_instance.test_two()</span></span></code></pre></div><h2 id="ming-ling-xing-can-shu" tabindex="-1">命令行参数 <a class="header-anchor" href="#ming-ling-xing-can-shu" aria-label="Permalink to &quot;命令行参数&quot;">​</a></h2><h3 id="-q-quiet" tabindex="-1">-q/--quiet <a class="header-anchor" href="#-q-quiet" aria-label="Permalink to &quot;-q/--quiet&quot;">​</a></h3><p>The <code>-q/--quiet</code> flag keeps the output brief in this and following examples.</p>`,30)]))}const g=i(h,[["render",l]]);export{y as __pageData,g as default};
