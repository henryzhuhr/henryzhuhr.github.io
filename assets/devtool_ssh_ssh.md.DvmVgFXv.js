import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.ko2zIC2c.js";const e="/assets/ssh-key.DSxQxLxw.svg",h="/assets/github-addsshkey.k24940uo.png",l="/assets/github-clone.Bh2Gd5Xb.png",y=JSON.parse('{"title":"少输密码多摸鱼","description":"","frontmatter":{"outline":"deep","title":"少输密码多摸鱼","subtitle":"SSH 使用指南","author":"HenryZhu","date":"2023-08-26T00:00:00.000Z","tags":["软件开发"]},"headers":[],"relativePath":"devtool/ssh/ssh.md","filePath":"devtool/ssh/ssh.md","lastUpdated":1739546373000}'),p={name:"devtool/ssh/ssh.md"};function k(d,s,r,o,g,c){return n(),a("div",null,s[0]||(s[0]=[t('<h1 id="ssh" tabindex="-1">SSH <a class="header-anchor" href="#ssh" aria-label="Permalink to &quot;SSH&quot;">​</a></h1><h2 id="jian-jie" tabindex="-1">🔑 简介 <a class="header-anchor" href="#jian-jie" aria-label="Permalink to &quot;🔑 简介&quot;">​</a></h2><p>安全外壳协议 (<strong>S</strong>ecure <strong>Sh</strong>ell Protocol, <strong>SSH</strong>) 是一种加密的网络传输协议，可在不安全的网络中为网络服务提供安全的传输环境。SSH 默认使用 TCP 端口 <strong>22</strong>。</p><p>SSH 最常见的用途是远程加密登录系统，例如：</p><ul><li>本地加密登录远程服务器</li><li>Github 身份验证，进行代码的克隆和推送</li></ul><h2 id="ssh-mi-yao" tabindex="-1">🔑 SSH 密钥 <a class="header-anchor" href="#ssh-mi-yao" aria-label="Permalink to &quot;🔑 SSH 密钥&quot;">​</a></h2><p>SSH 密钥是一对密钥（<strong>私钥</strong> 和 <strong>公钥</strong>）</p><table tabindex="0"><thead><tr><th>私钥</th><th>公钥</th></tr></thead><tbody><tr><td>文件无后缀</td><td>文件后缀为<code>.pub</code></td></tr><tr><td>保密，存放在个人电脑上</td><td>可以公开，上传至服务器</td></tr><tr><td>用于加密数据</td><td>用于解密数据</td></tr></tbody></table><p>在本机（主机1）生成 SSH 密钥对，将公钥上传至远程服务器（主机2/3），可以在多个场景中使用 SSH 密钥进行身份验证：</p><ol><li>登陆远程服务器（可能是本地局域网，也可能是广域网，例如图中主机2）</li><li>Github 身份验证（例如图中主机3），可以完成代码的克隆和推送</li></ol><p>对于不同的服务器可以生成不同的密钥，这样可以区分不同的服务器，也可以区分不同的账户</p><p><span id="img-ssh-key"></span></p><p><img src="'+e+`" alt="ssh 连接示意图"></p><p>SSH 密钥和配置文件通常存放在 <code>~/.ssh/</code> 目录下（<code>~</code> 代表用户的家目录）</p><ul><li>Linux 中 <code>~</code> 为 <code>/home/&lt;username&gt;</code></li><li>MacOS 中 <code>~</code> 为 <code>/Users/&lt;username&gt;</code></li><li>Windows 中 <code>~</code> 为 <code>C:\\Users\\&lt;username&gt;</code></li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/.ssh/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # SSH 配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id_rsa</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # 私钥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id_rsa.pub</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 公钥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id_rsa_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 私钥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id_rsa_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.pub</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 公钥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">               # 其他密钥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> known_hosts</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 存放已知的主机公钥</span></span></code></pre></div><p>SSH 身份认证过程如下：</p><ol><li>「客户端」发送自己的「公钥」给「服务器」</li><li>「服务器」用自己的「私钥」加密一个随机字符串，发送给「客户端」</li><li>「客户端」用自己的「私钥」解密这个字符串，发送给「服务器」</li><li>「服务器」用「客户端」的「公钥」解密这个字符串。如果解密成功，认证通过；之后的通信都是用对称加密算法进行加密</li></ol><h2 id="sheng-cheng-ssh-mi-yao" tabindex="-1">🔑 生成 SSH 密钥 <a class="header-anchor" href="#sheng-cheng-ssh-mi-yao" aria-label="Permalink to &quot;🔑 生成 SSH 密钥&quot;">​</a></h2><p>SSH 密钥和配置文件通常存放在 <code>~/.ssh/</code> 目录下，如果没有该文件夹，可以手动创建：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh</span></span></code></pre></div><p>在主机上使用 <code>ssh-keygen</code> 生成 SSH 密钥的命令如下：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">filenam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-C </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">commen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-N </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [...]</span></span></code></pre></div><p>其他可选参数</p><ul><li><code>-f</code> 指定生成的密钥文件。默认生成的密钥文件为 <code>~/.ssh/id_rsa</code>。</li></ul><p>如果有多个服务器可以设置不同的名称加以区分，例如设置一个名为 <code>~/.ssh/sshkey-github</code> 的密钥专为 Github 使用（✅ 推荐这种命名密钥的做法）</p><ul><li><code>-b</code> 指定密钥长度，默认为 2048，通过 <code>-b 4096</code> 可以设置为 4096</li><li><code>-t</code> 指定密钥类型，默认为 rsa，通过 <code>-t dsa</code> 可以设置为 dsa</li><li><code>-C</code> 添加注释信息，可以为邮箱地址，例如 <code>-C &quot;abc@gmail.com&quot;</code>，也可以为空</li><li><code>-N</code> 指定密钥的密码，如果不需要密码可以为空，一般来说是不需要密码的</li><li><code>--help</code> 查看帮助信息</li></ul><p>一些例子：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-L1218" id="tab-nI82k1j" checked><label data-title="默认生成" for="tab-nI82k1j">默认生成</label><input type="radio" name="group-L1218" id="tab-WdYTKPj"><label data-title="命名密钥" for="tab-WdYTKPj">命名密钥</label><input type="radio" name="group-L1218" id="tab-_DKqE6R"><label data-title="密钥注释" for="tab-_DKqE6R">密钥注释</label><input type="radio" name="group-L1218" id="tab-9QpIF7d"><label data-title="指定密钥长度" for="tab-9QpIF7d">指定密钥长度</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生成默认密钥 ~/.ssh/id_ed25519</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生成默认密钥 ~/.ssh/sshkey [推荐]</span></span>
<span class="line diff remove"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/sshkey</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 为了方便，一般不需要给自己电脑上的密钥再设定密码</span></span>
<span class="line diff add"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/sshkey</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -N</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 因此可以默认密码为空</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生成名为 ~/.ssh/sshkey-github 的密钥，用于 Github</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/sshkey-github</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生成名为 ~/.ssh/sshkey-github 的密钥，用于 Github，并添加注释</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/sshkey-github</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Github&quot;</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生成名为 ~/.ssh/sshkey 的密钥，长度为 4096</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/sshkey</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4096</span></span></code></pre></div></div></div><p>运行后会提示输入密钥文件的保存路径，直接（一路）回车即可，会在默认路径 <code>~/.ssh/</code> 下生成密钥文件：</p><ul><li><code>sshkey</code> 为私钥</li><li><code>sshkey.pub</code> 为公钥</li></ul><h2 id="mi-yao-guan-li" tabindex="-1">🔑 密钥管理 <a class="header-anchor" href="#mi-yao-guan-li" aria-label="Permalink to &quot;🔑 密钥管理&quot;">​</a></h2><span id="-密钥管理"></span><p>可以针对不同的服务器配置多个密钥，需要编 <code>~/.ssh/config</code> 文件，如果没有则手动创建。文件内容如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  HostName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">host_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Port</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 22</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">user_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ForwardAgent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  PreferredAuthentications</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publickey</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  IdentityFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">identity_fil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><code>Host</code> 指定一个或多个服务器的名称（别名），可以使用通配符（例如 *.example.com）来匹配多个，例如 <code>my_server</code>，也可以就是 IP 地址，<strong>登录的时候使用该名称</strong>。</li><li><code>HostName</code> 指定服务器的 IP 地址或域名</li><li><code>Port</code> 指定服务器的 SSH 端口，如果是默认端口 <code>22</code> 可以省略该项</li><li><code>User</code> 指定登录服务器的用户名，例如 <code>ubuntu</code></li><li><code>IdentityFile</code> 指定私钥的路径，例如 <code>~/.ssh/sshkey-github</code></li><li><code>IdentitiesOnly</code> 指定只使用指定的私钥进行认证，默认为 <code>no</code> ，可以在 ssh agent 提供了多个密钥的情况下，只使用指定的密钥进行认证</li><li><code>ForwardAgent</code> 指定是否转发本地的 SSH Agent</li><li><code>PreferredAuthentications</code> 指定登录服务器优先的认证方式，例如 <code>publickey</code>, <code>password</code>, <code>keyboard-interactive</code></li><li><code>StrictHostKeyChecking</code> 指定是否检查主机的公钥，有三个选项(<code>ask</code>,<code>yes</code>,<code>no</code>)如下： <ul><li><code>ask</code> 默认值，首次连接位置服务器时，询问是否接受公钥，接受则添加到 <code>known_hosts</code> 文件中，下次连接时不再询问</li><li><code>yes</code> 则每次验证远程服务器的公钥，如果与之前不同则会拒绝连接；需要手动更新 <code>known_hosts</code> 文件</li><li><code>no</code> 不检查公钥，直接添加到 <code>known_hosts</code> 文件，不推荐使用</li></ul></li></ul><p>如果有多个服务器，可以添加多个 Host，并且指定不同的私钥加以认证区分</p><p>随后，可以通过 Host 的名称登录服务器或者其他操作，例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 登录 my_server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_server</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 上传文件到 my_server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_server:~/file.txt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/file.txt</span></span></code></pre></div><blockquote><p>注意，这时候如果采用 <code>ssh &lt;user&gt;@&lt;ip&gt;</code> 的方式登录，还是需要输入密码的，因为没有指定私钥</p></blockquote><h3 id="mi-yao-guan-li-github" tabindex="-1">密钥管理-Github <a class="header-anchor" href="#mi-yao-guan-li-github" aria-label="Permalink to &quot;密钥管理-Github&quot;">​</a></h3><span id="密钥管理-github"></span><p>采用这种方式也可以配置多个 github/gitee/HuggingFace 账户：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-5Tvbw" id="tab-pWZEPTk" checked><label data-title="域名做 Host" for="tab-pWZEPTk">域名做 Host</label><input type="radio" name="group-5Tvbw" id="tab--ewbYgi"><label data-title="自定义 Host" for="tab--ewbYgi">自定义 Host</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  HostName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Your_Github_Nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  AddKeysToAgent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  IdentityFile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/sshkey-github</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Github</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  HostName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Your_Github_Nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  AddKeysToAgent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  IdentityFile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/sshkey-github</span></span></code></pre></div></div></div><p>连接测试的时候需要改成</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-0_2VD" id="tab-5i2vGnO" checked><label data-title="域名做 Host" for="tab-5i2vGnO">域名做 Host</label><input type="radio" name="group-0_2VD" id="tab-k7Gnz_H"><label data-title="自定义 Host" for="tab-k7Gnz_H">自定义 Host</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@Github</span></span></code></pre></div></div></div><p>使用 git 获取时，需要根据 Host 的名称进行 clone 操作，例如：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-aVIKj" id="tab-mst7xlj" checked><label data-title="域名做 Host" for="tab-mst7xlj">域名做 Host</label><input type="radio" name="group-aVIKj" id="tab-CUukh3R"><label data-title="自定义 Host" for="tab-CUukh3R">自定义 Host</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">github_usernam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">rep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.git</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@Github:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">github_usernam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">rep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.git</span></span></code></pre></div></div></div><p>VSCode 中的远程资源管理器(Remote Explorer)中，显示远程服务器列表就是通过读取 <code>~/.ssh/config</code> 文件中的 Host 来显示的，可以直接点击连接</p><h2 id="ssh-mi-yao-de-zuo-yong" tabindex="-1">🔑 SSH 密钥的作用 <a class="header-anchor" href="#ssh-mi-yao-de-zuo-yong" aria-label="Permalink to &quot;🔑 SSH 密钥的作用&quot;">​</a></h2><h3 id="deng-lu-yuan-cheng-fu-wu-qi" tabindex="-1">登录远程服务器 <a class="header-anchor" href="#deng-lu-yuan-cheng-fu-wu-qi" aria-label="Permalink to &quot;登录远程服务器&quot;">​</a></h3><p>使用 SSH 登陆远程服务器前，需要确保远程服务器安装并且开启了 SSH 服务，一般来说 Linux 服务器会默认安装 <code>openssh-server</code> ，而一些桌面版的 Linux 系统可能没有安装 SSH 服务，需要手动安装。对于 Ubuntu ，可以如下安装</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openssh-server</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span></code></pre></div><p>在登陆的时候，会自动将「本地私钥」和「服务器公钥」进行匹配，如果匹配成功，则可以免密登录。这在使用 VSCode 远程开发的时候非常有用，可以免去每次输入密码的麻烦。 (关于 VScode 远程开发可以参考 <a href="https://code.visualstudio.com/docs/remote/ssh" target="_blank" rel="noreferrer"><em>&quot;Remote Development using SSH&quot;</em></a>)</p><p>使用 <code>ssh-copy-id</code> 命令可以将「本地公钥」传输协议到远程服务器并存储在「公钥认证」文件中，例如：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-copy-id</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">identity_fil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hostnam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><code>-i</code> 指定「本地公钥」的路径，例如 <code>-i ~/.ssh/sshkey.pub</code></li><li><code>&lt;user&gt;@&lt;hostname&gt;</code> 远程服务器的用户名和主机名，例如 <code>ubuntu@192.168.1.1</code></li><li><code>-p</code> 如果远程服务器的 SSH 端口不是默认的 22 端口，可以通过 <code>-p &lt;port&gt;</code> 指定端口</li></ul><p>（对于 win 系统，没有 <code>ssh-copy-id</code> 命令，）也可以手动将「本地公钥」复制到远程服务器的 <code>~/.ssh/authorized_keys</code> 文件中 (如果不存在，需要手动创建) ，但是推荐使用 <code>ssh-copy-id</code> 命令（win 可以使用 git bash），因为该命令会自动创建文件，并自动设置权限</p><p>这里提供一个生成密钥并自动上传至服务器的脚本 <code>ssh-keygen-auto.sh</code> ，高亮部分需要自行修改：</p><details class="details custom-block"><summary>查看完整代码</summary><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark has-highlighted vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ========================================</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">key_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;server&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 生成的密钥名称</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ubuntu&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 服务器用户名，如果仅生成密钥，此项可忽略</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">server_ip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192.168.1.6&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 服务器 IP</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;22&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">               # 服务器端口，默认 22</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ========================================</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生成密钥文件路径，密钥名称为 sshkey-&lt;key_name&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">key_file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.ssh/sshkey-\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">key_name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.ssh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.ssh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生成本地密钥</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${key_file} ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;密钥已存在: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">key_file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    comment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${comment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">key_file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果 comment 为空，则注释为 key_file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${key_file} </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">comment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -N</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 上传公钥 至 服务器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-copy-id</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${key_file}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.pub</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${port} \${username}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${server_ip} </span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot; SEE :\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">key_file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div></details><h3 id="github-shen-fen-yan-zheng" tabindex="-1">Github 身份验证 <a class="header-anchor" href="#github-shen-fen-yan-zheng" aria-label="Permalink to &quot;Github 身份验证&quot;">​</a></h3><blockquote><p><a href="https://huggingface.co" target="_blank" rel="noreferrer">Hugging Face</a> 等也是如此操作添加</p></blockquote><p>Github 支持使用 SSH 在 GitHub.com 上的存储库中访问和写入数据，参考 <a href="https://docs.github.com/zh/authentication/connecting-to-github-with-ssh/about-ssh" target="_blank" rel="noreferrer">about-ssh</a></p><p>在 Github 中 <code>Settings -&gt; SSH and GPG keys -&gt; New SSH key</code> 中添加密钥，将本地生成的公钥(<code>id_rsa_github.pub</code>)复制到 Github 中，该密钥的命名可以自定义，建议和设备绑定，并且加上密钥名称，例如 <code>Ubuntu22.04-id_rsa</code>（配置名称后需要设置 <code>config</code> 文件，参考 <a href="#-密钥管理">ssh <code>config</code></a>）</p><p><img src="`+h+`" alt="公钥添加到 Github"></p><p>添加之后，需要进行连接测试以建立一次连接，例如：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@Github</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 如果在 ~/.ssh/config 中配置了 Host Github</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@hf.co</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # for verifying Hugging Face</span></span></code></pre></div><blockquote><p>按照 Host 名称进行连接，参考 <a href="#密钥管理-github">Github 配置</a></p></blockquote><p>测试成功后出现如下提示则说明连接成功</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> User!</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span></span></code></pre></div><p>随后在 clone 项目采用 ssh 的方式，会自动与 Github 建立连接，Github 会将公钥和「<strong>当前设备中</strong>」的私钥进行匹配，如果匹配成功，则可以免密操作。基于 ssh 的仓库在 push 会自动使用 ssh 进行验证，不需要输入用户名和密码</p><blockquote><p>注意：如果是多设备，需要将每个设备的公钥都添加到 Github 中，这样才能实现多设备免密操作。每个设备生成的私钥都不一样，当然了，把密钥复制到其他设备也是可以的，但是这样就失去了 SSH 密钥的意义了。</p></blockquote><p><img src="`+l+`" alt="clone 项目采用 ssh 的方式"></p><p>HTTPS 和 SSH clone 方式的区别：</p><ul><li>HTTPS 可以任意用户克隆，SSH 只能克隆自己（有权限的）的项目，并且需要配置 SSH 密钥</li><li>在推送代码的时候，HTTPS 需要输入用户名和密码，SSH 不需要输入用户名和密码</li></ul><h3 id="duan-kou-zhuan-fa" tabindex="-1">端口转发 <a class="header-anchor" href="#duan-kou-zhuan-fa" aria-label="Permalink to &quot;端口转发&quot;">​</a></h3><h2 id="xiu-gai-ssh-mo-ren-deng-lu-duan-kou" tabindex="-1">修改 ssh 默认登陆端口 <a class="header-anchor" href="#xiu-gai-ssh-mo-ren-deng-lu-duan-kou" aria-label="Permalink to &quot;修改 ssh 默认登陆端口&quot;">​</a></h2><p>参考 <a href="https://cloud.tencent.com/document/product/213/42838" target="_blank" rel="noreferrer">“修改云服务器远程默认端口 | 腾讯云”</a></p><p>一些情况下，为了安全性，需要修改 ssh 默认登陆端口，可以通过修改 <code>/etc/ssh/sshd_config</code> 文件中的 <code>Port</code> 选项来修改 ssh 默认登陆端口，例如：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/ssh/sshd_config.d/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.conf</span></span>
<span class="line"></span>
<span class="line diff remove"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#Port 22</span></span>
<span class="line diff add"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">xxx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # &lt;xxxx&gt; 是新的端口号</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddressFamily</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> any</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#ListenAddress 0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#ListenAddress ::</span></span></code></pre></div><p>添加新端口后，需要修改防火墙规则</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SSH_PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">xxxx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # &lt;xxxx&gt; 是新的端口号</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --permanent</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add-port=\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SSH_PORT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}/tcp</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 添加新端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --reload</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 更新防火墙规则</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list-ports</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看已开放的端口</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># sudo firewall-cmd --permanent --zone=public --remove-port=\${SSH_PORT}/tcp # 移除端口</span></span></code></pre></div><blockquote><p><code>firewalld</code> 可能需要安装</p></blockquote><p>重启 ssh 服务使配置生效：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sshd</span></span></code></pre></div><p>Ubuntu 24.04 LTS 后需要执行如下命令，原因可以参考 <a href="https://bugs.launchpad.net/ubuntu/+source/openssh/+bug/2069041" target="_blank" rel="noreferrer"><em>Changing Port in sshd_config requires calling systemctl daemon-reload</em></a></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh.socket</span></span></code></pre></div>`,87)]))}const u=i(p,[["render",k]]);export{y as __pageData,u as default};
