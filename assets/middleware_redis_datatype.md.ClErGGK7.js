import{_ as n,c as t,o as e,ag as a,j as i,a as l}from"./chunks/framework.ko2zIC2c.js";const h="/assets/redis-list.YViMlncO.svg",b=JSON.parse('{"title":"Redis 数据类型","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"middleware/redis/datatype.md","filePath":"middleware/redis/datatype.md","lastUpdated":1744732485000}'),d={name:"middleware/redis/datatype.md"},p={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},o={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.816ex",height:"2.072ex",role:"img",focusable:"false",viewBox:"0 -833.9 3012.6 915.9","aria-hidden":"true"};function k(r,s,c,g,F,y){return e(),t("div",null,[s[4]||(s[4]=a('<h1 id="redis-shu-ju-lei-xing" tabindex="-1">Redis 数据类型 <a class="header-anchor" href="#redis-shu-ju-lei-xing" aria-label="Permalink to &quot;Redis 数据类型&quot;">​</a></h1><p>Redis 的五种基本数据类型：字符串、列表、集合、有序集合、哈希，以及三种高级数据类型：地理位置、HyperLogLog、位图。</p><h2 id="zi-fu-chuan-string" tabindex="-1">字符串 String <a class="header-anchor" href="#zi-fu-chuan-string" aria-label="Permalink to &quot;字符串 String&quot;">​</a></h2><h2 id="lie-biao-list" tabindex="-1">列表 List <a class="header-anchor" href="#lie-biao-list" aria-label="Permalink to &quot;列表 List&quot;">​</a></h2>',4)),i("p",null,[s[2]||(s[2]=l("一个列表最多包含 ",-1)),i("mjx-container",p,[(e(),t("svg",o,s[0]||(s[0]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width:3;"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(1512.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(2512.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g></g>',1)]))),s[1]||(s[1]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("msup",null,[i("mn",null,"2"),i("mrow",{"data-mjx-texclass":"ORD"},[i("mn",null,"32")])]),i("mo",null,"−"),i("mn",null,"1")])],-1))]),s[3]||(s[3]=l("（4294967295，超过40亿）",-1))]),s[5]||(s[5]=a(`<p>插入元素需要使用 <code>LPUSH</code> 或 <code>RPUSH</code> 命令，可以插入一个或多个元素。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LPUSH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [element </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">...]</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 从左边/头部插入元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RPUSH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [element </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">...]</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 从右边/尾部插入元素</span></span></code></pre></div><p>例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LPUSH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> letter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> f</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># (integer) 6</span></span></code></pre></div><p>获取需要使用 <code>LRANGE</code> 命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LRANGE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span></span></code></pre></div><p>如果 <code>start</code> 为 0，<code>stop</code> 为 -1，表示获取所有元素。例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LRANGE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> letter</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1) &quot;f&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 6) &quot;a&quot;</span></span></code></pre></div><p>注意到元素的顺序是反的，因为在插入时是从左边依次插入的，所以最后插入的元素在最前面。</p><p>Redis 的列表是一个双向链表，如下图所示：</p><p><img src="`+h+`" alt="redis-list"></p><p>删除元素需要使用 <code>LPOP</code> 或 <code>RPOP</code> 命令，可以删除一个或多个元素。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LPOP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [count]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RPOP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [count]</span></span></code></pre></div><p>例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LPOP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> letter</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 默认从头部删除一个元素</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &quot;f&quot; #表示删除的元素</span></span></code></pre></div><p>此外，可以使用 <code>BLPOP</code> 和 <code>BRPOP</code> 命令设置超时等待时间，单位为秒，命令格式如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BLPOP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [key </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">...]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> timeout</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BRPOP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [key </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">...]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> timeout</span></span></code></pre></div><p><code>BLPOP</code> 和 <code>BRPOP</code> 全称是 Blocking Left/Right Pop （阻塞式左/右弹出）</p><ul><li>如果元素不存在，则会阻塞等待，直到有元素可用或超时</li><li>如果超时，则返回 nil</li></ul><p>例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BLPOP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> letter</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 0 表示不超时，会一直等待</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1) &quot;letter&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2) &quot;e&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BLPOP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> letter</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 2 表示超时2秒</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1) &quot;letter&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2) &quot;d&quot;</span></span></code></pre></div><p>可以使用 <code>LPUSH</code> 和 <code>RPOP</code> 命令在列表的头部和尾部插入和删除元素，这样就可以实现栈和队列的功能，实现一个简单的消息队列。</p><p>可以使用 <code>LLLEN</code> 命令获取列表的长度：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LLEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span></span></code></pre></div><p>可以使用 <code>LINDEX</code> 命令获取指定位置的元素：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LINDEX</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index</span></span></code></pre></div><p>可以使用 <code>LSET</code> 命令设置指定位置的元素：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LSET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> element</span></span></code></pre></div><p>可以使用 <code>LINSERT</code> 命令在指定位置插入元素：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LINSERT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BEFORE/AFTER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pivot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> element</span></span></code></pre></div><p>可以使用 <code>LREM</code> 命令删除指定数量的元素：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LREM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> count</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> element</span></span></code></pre></div><p>可以使用 <code>LTRIM</code> 命令截取列表的指定范围：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LTRIM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span></span></code></pre></div><p>列表相关的命令：</p><table tabindex="0"><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>LPUSH key element [element ...]</code></td><td>从左边/头部插入元素</td></tr><tr><td><code>RPUSH key element [element ...]</code></td><td>从右边/尾部插入元素</td></tr><tr><td><code>LPOP key [count]</code></td><td>从左边/头部删除元素</td></tr><tr><td><code>RPOP key [count]</code></td><td>从右边/尾部删除元素</td></tr><tr><td><code>BLPOP key [key ...] timeout</code></td><td>阻塞式从左边/头部删除元素</td></tr><tr><td><code>BRPOP key [key ...] timeout</code></td><td>阻塞式从右边/尾部删除元素</td></tr><tr><td><code>LRANGE key start stop</code></td><td>获取指定范围的元素</td></tr><tr><td><code>LLEN key</code></td><td>获取列表的长度</td></tr><tr><td><code>LINDEX key index</code></td><td>获取指定位置的元素</td></tr><tr><td><code>LSET key index element</code></td><td>设置指定位置的元素</td></tr><tr><td><code>LINSERT key BEFORE/AFTER pivot element</code></td><td>在指定位置插入元素</td></tr><tr><td><code>LREM key count element</code></td><td>删除指定数量的元素</td></tr><tr><td><code>LTRIM key start stop</code></td><td>截取列表的指定范围</td></tr></tbody></table><h2 id="ji-he-set" tabindex="-1">集合 Set <a class="header-anchor" href="#ji-he-set" aria-label="Permalink to &quot;集合 Set&quot;">​</a></h2><h2 id="you-xu-ji-he-sorted-set" tabindex="-1">有序集合 Sorted Set <a class="header-anchor" href="#you-xu-ji-he-sorted-set" aria-label="Permalink to &quot;有序集合 Sorted Set&quot;">​</a></h2><h2 id="ha-xi-hash" tabindex="-1">哈希 Hash <a class="header-anchor" href="#ha-xi-hash" aria-label="Permalink to &quot;哈希 Hash&quot;">​</a></h2><h2 id="xiao-xi-dui-lie-stream" tabindex="-1">消息队列 Stream <a class="header-anchor" href="#xiao-xi-dui-lie-stream" aria-label="Permalink to &quot;消息队列 Stream&quot;">​</a></h2><h2 id="di-li-wei-zhi-geospatial" tabindex="-1">地理位置 Geospatial <a class="header-anchor" href="#di-li-wei-zhi-geospatial" aria-label="Permalink to &quot;地理位置 Geospatial&quot;">​</a></h2><h2 id="hyperloglog" tabindex="-1">HyperLogLog <a class="header-anchor" href="#hyperloglog" aria-label="Permalink to &quot;HyperLogLog&quot;">​</a></h2><h2 id="wei-tu-bitmap" tabindex="-1">位图 Bitmap <a class="header-anchor" href="#wei-tu-bitmap" aria-label="Permalink to &quot;位图 Bitmap&quot;">​</a></h2><h2 id="wei-yu-bitfield" tabindex="-1">位域 Bitfield <a class="header-anchor" href="#wei-yu-bitfield" aria-label="Permalink to &quot;位域 Bitfield&quot;">​</a></h2>`,44))])}const m=n(d,[["render",k]]);export{b as __pageData,m as default};
