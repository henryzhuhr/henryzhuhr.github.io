import{_ as i,c as a,o as n,ag as h}from"./chunks/framework.ko2zIC2c.js";const F=JSON.parse('{"title":"argparse: Python 内置的命令行接口","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"development/python/pythonlib/argparse/argparse.md","filePath":"development/python/pythonlib/argparse/argparse.md","lastUpdated":1745681479000}'),p={name:"development/python/pythonlib/argparse/argparse.md"};function t(e,s,l,k,r,d){return n(),a("div",null,s[0]||(s[0]=[h(`<h1 id="argparse-python-nei-zhi-de-ming-ling-xing-jie-kou" tabindex="-1">argparse: Python 内置的命令行接口 <a class="header-anchor" href="#argparse-python-nei-zhi-de-ming-ling-xing-jie-kou" aria-label="Permalink to &quot;argparse: Python 内置的命令行接口&quot;">​</a></h1><p><a href="https://docs.python.org/zh-cn/3/library/argparse.html" target="_blank" rel="noreferrer"><code>argparse</code></a> 模块可以让人轻松编写用户友好的命令行接口。程序定义它需要的参数，然后 <code>argparse</code> 将弄清如何从 <code>sys.argv</code> 解析出那些参数。 <code>argparse</code> 模块还会自动生成帮助和使用手册，并在用户给程序传入无效参数时报出错误信息</p><ul><li><a href="#argparse-python-内置的命令行接口">argparse: Python 内置的命令行接口</a></li><li><a href="#创建一个命令行参数解析器">创建一个命令行参数解析器</a></li><li><a href="#位置参数">位置参数</a></li><li><a href="#可选参数">可选参数</a></li><li><a href="#参数类型">参数类型</a></li><li><a href="#参数的默认值">参数的默认值</a></li><li><a href="#添加帮助信息">添加帮助信息</a></li><li><a href="#action">action</a></li><li><a href="#nargs">nargs</a></li><li><a href="#命令行参数解析器是如何工作的">命令行参数解析器是如何工作的</a></li></ul><h1 id="chuang-jian-yi-ge-ming-ling-xing-can-shu-jie-xi-qi" tabindex="-1">创建一个命令行参数解析器 <a class="header-anchor" href="#chuang-jian-yi-ge-ming-ling-xing-can-shu-jie-xi-qi" aria-label="Permalink to &quot;创建一个命令行参数解析器&quot;">​</a></h1><p>使用 <code>argparse</code> 的第一步是创建一个 <code>ArgumentParser</code> 对象，并且调用 <code>ArgumentParser</code> 对象的方法 <code>parse_args()</code> 对参数进行解析</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> argparse</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> argparse.ArgumentParser()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parser.parse_args()</span></span></code></pre></div><p>直接运行 <code>test.py</code> 并不会有什么输出。但是如果我们运行 <code>test.py</code> 后加上参数 <code>-h</code> 或 <code>--help</code> ，就会得到输出</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.py</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usage:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.py</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-h]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">optional</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arguments:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -h,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  show</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> this</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> message</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exit</span></span></code></pre></div><p>当附加其他的的命令行参数，会报错</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usage:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.py</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-h]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.py:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unrecognized</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arguments:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> foo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usage:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.py</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-h]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.py:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unrecognized</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arguments:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> foo</span></span></code></pre></div><p>那么命令行的参数是如何被解析的呢？ <a href="#命令行参数解析器是如何工作的">命令行参数解析器是如何工作的</a> ？</p><h1 id="wei-zhi-can-shu" tabindex="-1">位置参数 <a class="header-anchor" href="#wei-zhi-can-shu" aria-label="Permalink to &quot;位置参数&quot;">​</a></h1><p>为程序添加一个位置参数 (positional arguments)</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># test.py</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> argparse</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> argparse.ArgumentParser()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parser.add_argument(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;num&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parser.parse_args()</span></span></code></pre></div><p>直接运行 <code>test.py</code> 会报错，因为缺少参数</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>usage: lib-argparse.py [-h] num</span></span>
<span class="line"><span>lib-argparse.py: error: the following arguments are required: num</span></span></code></pre></div><p>我们可以通过启动时添加参数 <code>-h</code> 或 <code>--help</code> 获取该文件有哪些参数</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usage:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib-argparse.py</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-h] num</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">positional</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arguments:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  num</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">optional</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arguments:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -h,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  show</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> this</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> message</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exit</span></span></code></pre></div><h1 id="ke-xuan-can-shu" tabindex="-1">可选参数 <a class="header-anchor" href="#ke-xuan-can-shu" aria-label="Permalink to &quot;可选参数&quot;">​</a></h1><p>为程序添加一个位置参数 (optional arguments)</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># test.py</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> argparse</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> argparse.ArgumentParser()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parser.add_argument(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;--name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">args </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> parser.parse_args()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args.name)</span></span></code></pre></div><p>和固定位置参数的用法不同，可选参数的位置需要将参数名和参数值完整写入</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Namespace(name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;java&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">java</span></span></code></pre></div><p>否则会出现报错</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usage:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> optional-arguments.py</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-h] [--name NAME]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">optional-arguments.py:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unrecognized</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arguments:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java</span></span></code></pre></div><p>可选参数还有一个有意思的特点，就是可选参数具有短选项 (short options)</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> argparse</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> argparse.ArgumentParser()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parser.add_argument(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;--name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parser.add_argument(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;-a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;--age&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">args </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> parser.parse_args()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args.age)</span></span></code></pre></div><p>在命令行中可以使用短的参数名进行输入</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Namespace(name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;java&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> age=&#39;8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">8</span></span></code></pre></div><p>但是在程序中调用参数值，仍然需要其完整的名称 <code>args.age</code> ，如果试图采用其短选项 <code>args.a</code> 进行调用则会出现以下报错</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Namespace(name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;java&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> age=&#39;8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Traceback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (most </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">recent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> call</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  File</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;~/test.py&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 16,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">modul</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">args.a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AttributeError:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Namespace&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> object</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> has</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> attribute</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;a&#39;</span></span></code></pre></div><p>可选位置参数的位置是可以不固定的，对于上面的脚步，运行下面的两个脚本都可以得到相同的结果</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --age</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java</span></span></code></pre></div><h1 id="can-shu-lei-xing" tabindex="-1">参数类型 <a class="header-anchor" href="#can-shu-lei-xing" aria-label="Permalink to &quot;参数类型&quot;">​</a></h1><h1 id="can-shu-de-mo-ren-zhi" tabindex="-1">参数的默认值 <a class="header-anchor" href="#can-shu-de-mo-ren-zhi" aria-label="Permalink to &quot;参数的默认值&quot;">​</a></h1><h1 id="tian-jia-bang-zhu-xin-xi" tabindex="-1">添加帮助信息 <a class="header-anchor" href="#tian-jia-bang-zhu-xin-xi" aria-label="Permalink to &quot;添加帮助信息&quot;">​</a></h1><h1 id="action" tabindex="-1">action <a class="header-anchor" href="#action" aria-label="Permalink to &quot;action&quot;">​</a></h1><h1 id="nargs" tabindex="-1">nargs <a class="header-anchor" href="#nargs" aria-label="Permalink to &quot;nargs&quot;">​</a></h1><h1 id="ming-ling-xing-can-shu-jie-xi-qi-shi-ru-he-gong-zuo-de" tabindex="-1">命令行参数解析器是如何工作的 <a class="header-anchor" href="#ming-ling-xing-can-shu-jie-xi-qi-shi-ru-he-gong-zuo-de" aria-label="Permalink to &quot;命令行参数解析器是如何工作的&quot;">​</a></h1><p>我们进入 python 的命令行下</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Python</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.9.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (main, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Nov</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2021,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 03:48:35</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Clang </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13.0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (clang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">29</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)] on darwin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;help&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;copyright&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;credits&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;license&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> more</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> information.</span></span></code></pre></div><p>我们创建一个 <code>ArgumentParser</code> 对象，并且通过调用 <code>add_argument()</code> 方法添加两个固定位置参数 <code>integers</code> 和 <code>float</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> argparse</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parser</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> argparse.ArgumentParser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parser.add_argument(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;integers&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_StoreAction(option_strings</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=[],</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dest=&#39;integers&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nargs=None,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> const=None,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> default=None,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> type=None,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> choices=None,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help=None,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> metavar=None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parser.add_argument(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;float&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_StoreAction(option_strings</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=[],</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dest=&#39;float&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nargs=None,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> const=None,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> default=None,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> type=None,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> choices=None,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help=None,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> metavar=None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>通常，这些调用指定 <code>ArgumentParser</code> 如何获取命令行字符串并将其转换为对象。这些信息在 <code>parse_args()</code> 调用时被存储和使用。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">args</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> parser.parse_args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0.618&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Namespace(integers</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;8&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> float=&#39;0.618&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">args.integers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">8</span></span></code></pre></div><p>在脚本 ( <code>.py</code> 文件) 中，通常 <code>parse_args()</code> 会被不带参数调用，而 <code>ArgumentParser</code> 将自动从 <code>sys.argv</code> 中确定命令行参数。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> argparse</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> argparse.ArgumentParser()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parser.add_argument(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;integers&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parser.add_argument(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;float&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">args </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> parser.parse_args()</span></span></code></pre></div><p>相当于在命令行输入命令调用脚本的时候</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.618</span></span></code></pre></div><p><code>python3 test.py</code> 后的全部参数 <code>8 0.618</code> 会被存储为一个列表 [&#39;8&#39;,&#39;0.618&#39;] 并且作为 <code>parser.parse_args()</code> 的参数使用</p>`,50)]))}const E=i(p,[["render",t]]);export{F as __pageData,E as default};
