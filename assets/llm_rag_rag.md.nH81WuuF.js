import{_ as e,c as r,o as t,ag as i}from"./chunks/framework.ko2zIC2c.js";const _=JSON.parse('{"title":"RAG","description":"","frontmatter":{},"headers":[],"relativePath":"llm/rag/rag.md","filePath":"llm/rag/rag.md","lastUpdated":1740317462000}'),l={name:"llm/rag/rag.md"};function o(n,a,d,h,s,c){return t(),r("div",null,a[0]||(a[0]=[i('<h1 id="rag" tabindex="-1">RAG <a class="header-anchor" href="#rag" aria-label="Permalink to &quot;RAG&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p><strong>增强检索生成 (Reformulated Adversarial Generation, RAG)</strong> 是一个基于检索的生成模型，它将检索和生成结合在一起，以提高生成的质量。RAG 由两个部分组成：一个检索器和一个生成器。检索器使用检索模型来检索相关的文档，生成器使用检索到的文档来生成答案。检索器和生成器可以是任何模型，但通常是检索器是一个检索模型，生成器是一个生成模型。</p><h2 id="detail" tabindex="-1">detail <a class="header-anchor" href="#detail" aria-label="Permalink to &quot;detail&quot;">​</a></h2><h3 id="xiang-liang-hua-mo-xing" tabindex="-1">向量化模型 <a class="header-anchor" href="#xiang-liang-hua-mo-xing" aria-label="Permalink to &quot;向量化模型&quot;">​</a></h3><h2 id="reference" tabindex="-1">reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;reference&quot;">​</a></h2><ul><li><a href="https://arthurchiao.art/blog/rag-basis-bge-zh/" target="_blank" rel="noreferrer">大模型 RAG 基础：信息检索、文本向量化及 BGE-M3 embedding 实践（2024）</a></li></ul>',7)]))}const m=e(l,[["render",o]]);export{_ as __pageData,m as default};
