import{_ as s,c as i,o as e,ag as t}from"./chunks/framework.ko2zIC2c.js";const g=JSON.parse('{"title":"Go 安装","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"development/go/starter/install.md","filePath":"development/go/starter/install.md","lastUpdated":1745680375000}'),n={name:"development/go/starter/install.md"};function l(h,a,o,p,r,d){return e(),i("div",null,a[0]||(a[0]=[t(`<h1 id="go-an-zhuang" tabindex="-1">Go 安装 <a class="header-anchor" href="#go-an-zhuang" aria-label="Permalink to &quot;Go 安装&quot;">​</a></h1><h2 id="an-zhuang" tabindex="-1">安装 <a class="header-anchor" href="#an-zhuang" aria-label="Permalink to &quot;安装&quot;">​</a></h2><h3 id="an-zhuang-yu-bian-yi-ban-ben" tabindex="-1">安装预编译版本 <a class="header-anchor" href="#an-zhuang-yu-bian-yi-ban-ben" aria-label="Permalink to &quot;安装预编译版本&quot;">​</a></h3><h3 id="cong-yuan-ma-bian-yi" tabindex="-1">从源码编译 <a class="header-anchor" href="#cong-yuan-ma-bian-yi" aria-label="Permalink to &quot;从源码编译&quot;">​</a></h3><p>参考 <a href="https://go.dev/doc/install/source" target="_blank" rel="noreferrer">Installing Go from source</a></p><h2 id="pei-zhi" tabindex="-1">配置 <a class="header-anchor" href="#pei-zhi" aria-label="Permalink to &quot;配置&quot;">​</a></h2><p>PATH 中包含 go 即可，可以通过 <code>go env</code> 查看 Go 的环境变量</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span></span></code></pre></div><h3 id="goproxy-dai-li" tabindex="-1">GOPROXY 代理 <a class="header-anchor" href="#goproxy-dai-li" aria-label="Permalink to &quot;GOPROXY 代理&quot;">​</a></h3><p>配置国内代理 <a href="https://goproxy.cn" target="_blank" rel="noreferrer">Goproxy.cn</a></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GO111MODULE=on</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPROXY=https://goproxy.cn,direct</span></span></code></pre></div><h3 id="goprivate-si-you-cang-ku" tabindex="-1">GOPRIVATE 私有仓库 <a class="header-anchor" href="#goprivate-si-you-cang-ku" aria-label="Permalink to &quot;GOPRIVATE 私有仓库&quot;">​</a></h3><p>Go 1.13 版本后，拉取私有仓库的方式发生了变化，需要配置环境变量，否则会报错</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOPRIVATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">github.com/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>同时由于 <code>go get</code> 默认使用的是 https 协议，如果你的私有仓库是 ssh 协议，需要配置 <code>~/.gitconfig</code> 文件，添加如下配置</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> url.&quot;git@git.xxx.com&quot;.insteadOf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://git.xxx.com/&quot;</span></span></code></pre></div>`,16)]))}const c=s(n,[["render",l]]);export{g as __pageData,c as default};
